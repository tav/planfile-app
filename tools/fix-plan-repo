#! /usr/bin/env python

# Public Domain (-) 2012 The Planfile App Authors.
# See the Planfile App UNLICENSE file for details.

import sys

from os import listdir, rename
from os.path import isfile, join
from re import compile

argv = sys.argv[1:]
if not argv:
	print "Usage: fix-plan-repo <directory-path>"
	print
	print "    Converts filenames and ID metadata of .md files in the directory"
	print "    to match the current title metadata field."
	print
	sys.exit(1)

path = argv[0]
listing = listdir(path)

match_meta = compile('^---\s*\n((?:.|\n)+?)\n---\s*\n').match
replace_meta = compile('^---\s*\n(?:(?:.|\n)+?)\n---\s*\n').sub
replace_title = compile('[^a-zA-Z0-9]+').sub

for filename in listing[:]:
	if not filename.endswith('.md'):
		continue
	if filename.lower() == "readme.md":
		continue
	if filename.startswith('summary.'):
		continue
	filepath = join(path, filename)
	if not isfile(filepath):
		continue
	file = open(filepath, 'rb')
	content = file.read()
	file.close()
	match = match_meta(content)
	if not match:
		print
		print "! SKIPPING (no meta):", filename
		print
		continue
	meta = match.group(1)
	data = {}
	for line in meta.splitlines():
		line = line.strip()
		if not line:
			continue
		k, v = line.split(':', 1)
		data[k] = v.strip()
	if 'title' not in data:
		print
		print "! SKIPPING (no title):", filename
		print
		continue
	id = replace_title('-', data['title'].lower())
	if id != data.get('id', ''):
		print "# fixing id: %r -> %r" % (data.get('id'), id)
		data['id'] = id
		lines = ['---']
		for k in sorted(data):
			lines.append("%s: %s" % (k, data[k]))
		lines.append('---\n\n')
		file = open(filepath, 'wb')
		file.write(replace_meta('\n'.join(lines), content))
		file.close()
	nf = id + ".md"
	if nf != filename:
		if nf in listing:
			print
			print "! CONFLICT RENAMING (file already exists): %r -> %r" % (filename, nf)
			print
		else:
			print "# fixing filename: %r -> %r" % (filename, nf)
			rename(filepath, join(path, nf))
	# print filename